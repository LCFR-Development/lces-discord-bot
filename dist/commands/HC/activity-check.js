/* Optimized production build generated by CommandKit */
import {
  activity_test_default
} from "../../chunk-PIH6R2HA.js";
import "../../chunk-47S4EFSV.js";
import "../../chunk-Q37PBNKX.js";
import "../../chunk-3ZFECXL4.js";
import "../../chunk-HMY3F323.js";
import "../../chunk-IRK3774Y.js";
import "../../chunk-N7MB6LZK.js";
import "../../chunk-BRHHUFTO.js";
import "../../chunk-OEYE4OGF.js";
import "../../chunk-LZZ7EWX6.js";
import "../../chunk-TIY2NJDP.js";
import "../../chunk-ODBUWFBP.js";
import "../../chunk-F3NBDL6Y.js";
import {
  __name
} from "../../chunk-4HQ2LG3N.js";

// src/commands/HC/activity-check.ts
import { SlashCommandBuilder } from "discord.js";
var data = new SlashCommandBuilder().setName("activity-check").setDescription("Make an activity check.").addSubcommand(
  (s) => s.setName("create").setDescription("Create an activity check.").addStringOption(
    (o) => o.setName("time").setDescription("Time for the activity check in format 1y/d/m/s").setRequired(true)
  )
).addSubcommand(
  (s) => s.setName("resend").setDescription("Resend an activity check from id").addStringOption(
    (o) => o.setName("id").setDescription("ID of the activity check").setRequired(true)
  )
).addSubcommand(
  (s) => s.setName("clear").setDescription("Clear the server after an activity check.")
).addSubcommand(
  (s) => s.setName("find").setDescription("Find information on an activity check.").addStringOption(
    (o) => o.setName("id").setDescription("ID of the activity check").setRequired(true)
  )
);
async function run({ interaction, client, handler }) {
  const subcommand = interaction.options.getSubcommand();
  switch (subcommand) {
    case "create":
      await activity_test_default.create({ interaction, client, handler });
      break;
    case "clear":
      await activity_test_default.clear({ interaction, client, handler });
      break;
    case "find":
      await activity_test_default.find({ interaction, client, handler });
      break;
    case "resend":
      await activity_test_default.resend({ interaction, client, handler });
      break;
  }
}
__name(run, "run");
var options = {};
export {
  data,
  options,
  run
};
